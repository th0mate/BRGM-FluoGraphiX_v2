name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    # Ajout du cache des dépendances npm
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    # Cache des navigateurs Playwright pour accélérer les futurs workflows
    - name: Cache Playwright browsers
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

    - name: Run Playwright tests
      id: run-tests
      run: npx playwright test
      # Pas de `continue-on-error` ici pour que l'échec des tests marque le job comme failed

    # Publier le rapport HTML comme artefact de build (accessible depuis l'interface GitHub)
    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()  # Execute cette étape que les tests aient réussi ou échoué
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    # Ajout d'une étape pour afficher clairement le statut des tests
    - name: Check test status
      if: steps.run-tests.outcome != 'success'
      run: |
        echo "::error::Les tests Playwright ont échoué. Consultez le rapport pour plus de détails."
        exit 1
